/*예제 5-4 : 메소드 오버라이딩으로 다형성 실현
 shape의 draw() 메소드를 Line, Circle, Rect 클래스에서 목적에 맞게 오버라이딩하는 다형성 사례를 보여줌*/


class Shape{ //도형의 슈퍼 클래스
	public void draw() {
		System.out.println("Shape");
	}
}

class Line extends Shape{ 
	public void draw() { //메소드 오버라이딩
		System.out.println("Line");
	}
}

class Rect extends Shape{
	public void draw() { //메소드 오버라이딩
		System.out.println("Rect");
	}
}

class Circle extends Shape{
	public void draw() { //메소드 오버라이딩
		System.out.println("Circle");
	}
}


public class MethodOverridingEx {
	static void paint(Shape p) { //Shape을 상속받은 객체들이 매개변수로 넘어올 수 있음
		p.draw(); //p가 가르키는 갹채애 오버라이딩된 draw() 호출
		//동적바인딩
		
	}
	
	public static void main(String[] args) {
		Line line=new Line();
		paint(line); //Line의 draw() 실행. "Line" 출력
		
		paint(new Shape()); //Shape의 draw() 실행. "Shape" 출력
		paint(new Line()); //오버라이딩된 메소드 Line의 draw() 실행
		paint(new Rect()); //오버라이딩된 메소드 Rect의 draw() 실행
		paint(new Circle()); //오버라이딩된 메소드 Circle의 draw() 실행
	}

}
